{
  "id" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
  "realm" : "geo-tracking-solution",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : true,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "fa7f4ac4-381a-4a08-be2c-43509f8f3a99",
      "name" : "groupmaster",
      "description" : "Building on the Squadmaster role, a Groupmaster can also assign roles to other users, create subgroups, and register new users as group members.",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
      "attributes" : { }
    }, {
      "id" : "b5793521-13ae-491f-95e0-84ec06c3a431",
      "name" : "squadmaster",
      "description" : "This role includes all the privileges of a Member. In addition, a Squadmaster can add users to a temporary group called a Squad. In a Squad, all members can see each other, and the Squadmaster can view the entire group.",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
      "attributes" : { }
    }, {
      "id" : "4b7273b1-e842-4e68-8000-bea8d4e6eca5",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
      "attributes" : { }
    }, {
      "id" : "0fbb8885-2594-45bf-baf6-5a7b3b2be64c",
      "name" : "default-roles-geo-tracking-solution",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
      "attributes" : { }
    }, {
      "id" : "e1480c57-be2b-4eee-a932-7624e69e556d",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
      "attributes" : { }
    }, {
      "id" : "8676552e-55bd-4c87-8ce9-a254c81879c2",
      "name" : "member",
      "description" : "This is the default role assigned to users. Members do not have any administrative privileges.",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e",
      "attributes" : { }
    } ],
    "client" : {
      "java-spring" : [ ],
      "realm-management" : [ {
        "id" : "57ac1b54-99d3-48e0-a91a-99fae450a447",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "8ce0363b-21bd-4cb4-954b-df886b1e652e",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "e4c0d017-3302-47c8-a9e2-4d66bb559ded",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "667472e1-d244-43f4-9dcd-c63109a10dc4",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "574edc51-0d36-43ee-82e7-999c2449743d",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "539007df-8f62-4572-8c5d-d6445dbbf5ed",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "3a3695ed-1f19-49c6-995a-98e9d5862858",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "3bcba114-771d-43b9-bcd8-80ee028aa2eb",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "60b9b5a7-5652-4dc4-8a22-9d54ad428be7",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "a0bdbb3f-d430-4aee-9064-3607f3ee5559",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "f1fdd60a-16d4-4e4d-ba57-f204bbe30453",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "969b2864-1efe-4d2c-ae0b-f20a25a8643c",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "884b4fae-7fa4-4cbf-b717-80a526f2a328",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "ed9d3b51-aa89-4b6b-a334-1fe469efb00e",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "e43e7bfc-b3f2-4ce2-8aab-b12f9a90f8c5",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-clients", "manage-clients", "manage-authorization", "query-realms", "view-events", "manage-users", "manage-identity-providers", "query-users", "query-groups", "impersonation", "view-realm", "manage-events", "manage-realm", "create-client", "view-identity-providers", "view-authorization", "query-clients", "view-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "78039615-d5bb-444b-8cf4-78a04e569cd9",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "0db1ce17-4391-47b4-a917-dbc9dd1aba82",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "dca98aee-935e-42a2-920a-e51e532e9a43",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      }, {
        "id" : "3763f247-3e0d-4e71-95b4-0c8f41116623",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
        "attributes" : { }
      } ],
      "angular-client" : [ ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "285cc0da-622b-4489-8840-adbd92473289",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "98ec0c0e-1821-44a6-a8ad-f17a6ce05ab3",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "79858248-25f3-4f39-a0fa-913cdf01c4ff",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "2627c49f-437f-45e6-a8bd-de2f07387315",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "19cdcf4f-c13a-46ed-ad7c-4d21d00ae3ce",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "2f8f5f32-cb73-45ec-a7e9-faab286e7187",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "cabecf4a-2101-4904-bee9-b4a59a81f0ff",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "df54f3b1-4aad-4fff-a05f-28d032460bde",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "48aadd5e-ec83-4237-8606-d3a2ba2b929d",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      }, {
        "id" : "a24f78a1-4c79-46ac-a4e4-418fd2ae85ee",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ {
    "id" : "1b36e66f-35b4-4aea-a6e5-2959c61f5d85",
    "name" : "HTL Hollabrunn",
    "path" : "/HTL Hollabrunn",
    "subGroups" : [ {
      "id" : "1f90137b-433f-40cc-81a7-1146fc6a1291",
      "name" : "Diplomarbeits-Gruppe",
      "path" : "/HTL Hollabrunn/Diplomarbeits-Gruppe",
      "parentId" : "1b36e66f-35b4-4aea-a6e5-2959c61f5d85",
      "subGroups" : [ ],
      "attributes" : { },
      "realmRoles" : [ ],
      "clientRoles" : { }
    } ],
    "attributes" : { },
    "realmRoles" : [ ],
    "clientRoles" : { }
  } ],
  "defaultRole" : {
    "id" : "0fbb8885-2594-45bf-baf6-5a7b3b2be64c",
    "name" : "default-roles-geo-tracking-solution",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "f02de5c7-31a6-44f5-ab7a-51653604341e"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "385d91b0-d3cc-43f3-b866-2f52dff15847",
    "username" : "adrian-zeitlberger",
    "firstName" : "Adrian",
    "lastName" : "Zeitlberger",
    "email" : "adrian@example.com",
    "emailVerified" : true,
    "createdTimestamp" : 1741696266518,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "1c91e5c0-f63e-4253-a999-2532c38fbd1e",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1741699346076,
      "secretData" : "{\"value\":\"LClw6+DxqTM5CcSM97JNIIylW3FH4V52+CNGC8PFQJo=\",\"salt\":\"sgmOU5WYU+K6Q7wEc2QS0g==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "groupmaster", "squadmaster", "default-roles-geo-tracking-solution", "member" ],
    "notBefore" : 0,
    "groups" : [ "/HTL Hollabrunn/Diplomarbeits-Gruppe" ]
  }, {
    "id" : "5b13667a-de73-46a8-a246-944ebc0a0307",
    "username" : "benjamin-suljevic",
    "firstName" : "Benjamin",
    "lastName" : "Suljevic",
    "email" : "benjamin@example.com",
    "emailVerified" : true,
    "createdTimestamp" : 1741695986334,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "b11b13e8-27dd-4a7b-9c91-972a06160928",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1741699331004,
      "secretData" : "{\"value\":\"QjT1vR9wLGoBn4DUhF+FM+n1HWkVdizBFupuTA4+p+s=\",\"salt\":\"o/RHlFRinEikX3taluKBsw==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-geo-tracking-solution", "member" ],
    "notBefore" : 0,
    "groups" : [ "/HTL Hollabrunn/Diplomarbeits-Gruppe" ]
  }, {
    "id" : "c0236842-9440-40cd-8c84-ff7aceb6188f",
    "username" : "felix-ebertz",
    "firstName" : "Felix",
    "lastName" : "Ebertz",
    "email" : "felix@example.com",
    "emailVerified" : true,
    "createdTimestamp" : 1741695725641,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "170be7d6-2893-46e6-aa71-1643962afe7a",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1741699299239,
      "secretData" : "{\"value\":\"k8Q4jyqJ0+PGgmabasaweLpDrdYa8gYM63z+0wJMgCw=\",\"salt\":\"9cTFAJOdcOmKMvjivTu7yA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-geo-tracking-solution", "member" ],
    "notBefore" : 0,
    "groups" : [ "/HTL Hollabrunn/Diplomarbeits-Gruppe" ]
  }, {
    "id" : "7444a08e-1d27-4ce0-8e9f-07e1e5b34bab",
    "username" : "jonas-schwarz",
    "firstName" : "Jonas",
    "lastName" : "schwarz",
    "email" : "jonas@example.com",
    "emailVerified" : true,
    "createdTimestamp" : 1741696060220,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "61d6a31d-d796-46e2-8f06-9f5acc500406",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1741699315034,
      "secretData" : "{\"value\":\"GipJWgQBFbvmJPrixHwLzUT8CyVLmOMLihKiji6TlFE=\",\"salt\":\"aB6ALDtKRK4ICEzE6TF5KA==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-geo-tracking-solution", "member" ],
    "notBefore" : 0,
    "groups" : [ "/HTL Hollabrunn/Diplomarbeits-Gruppe" ]
  }, {
    "id" : "f3b66a01-19a6-4d7e-9fa1-ff7b75d84040",
    "username" : "service-account-java-spring",
    "emailVerified" : false,
    "createdTimestamp" : 1741692563571,
    "enabled" : true,
    "totp" : false,
    "serviceAccountClientId" : "java-spring",
    "credentials" : [ ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-geo-tracking-solution" ],
    "clientRoles" : {
      "realm-management" : [ "view-realm", "manage-users", "view-users" ]
    },
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "fa8a53a8-6884-475e-9c3d-16431b4a9225",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/geo-tracking-solution/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/geo-tracking-solution/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "2e5d5dc2-ab5a-4a54-a299-0febebcbd932",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/geo-tracking-solution/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/geo-tracking-solution/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "18519123-aa37-4eee-bde4-f4470f1fbb39",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "6b92418a-575c-49e5-842f-2f7a14700419",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "f0a337c1-7532-412f-b3ba-f8681aed5a5e",
    "clientId" : "angular-client",
    "name" : "angular-client",
    "description" : "This is the primary client, which is mainly utilized within the Angular application for authentication and authorization purposes. It plays a crucial role in managing user access and securing interactions between the frontend and Keycloak.",
    "rootUrl" : "http://localhost:4200",
    "adminUrl" : "http://localhost:4200",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:4200/*" ],
    "webOrigins" : [ "*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "backchannel.logout.session.required" : "true",
      "post.logout.redirect.uris" : "http://localhost:4200/*",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "98ec0c0e-1821-44a6-a8ad-f17a6ce05ab3",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "b8b24bb0-8044-4d34-90c1-1e8fcf512756",
    "clientId" : "java-spring",
    "name" : "java-spring",
    "description" : "The Java-Spring client is designed for secure user authentication and authorization with Keycloak. It supports authentication using a client secret, allowing seamless integration with Spring applications.",
    "rootUrl" : "",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "9Av5VRfP4yG7fJeIVYqmBOk2KrRBVkzw",
    "redirectUris" : [ "/*" ],
    "webOrigins" : [ "/*" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1741692563",
      "backchannel.logout.session.required" : "true",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "51b67e97-3d8a-4b5a-b688-672a82192304",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "210c251d-01c9-4d71-8ee4-bdf3e4ce7375",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "eb99abd2-5e26-4995-b2d1-dab4b0fb0a26",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "2a4f572b-b301-4c6f-b83e-79e02ccc271c",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "true"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  }, {
    "id" : "cfe6a09b-98a3-4bc0-b3e6-e4690448bf55",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/geo-tracking-solution/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/geo-tracking-solution/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "realm_client" : "false",
      "client.use.lightweight.access.token.enabled" : "true",
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "f459ee23-b28b-46e4-8f20-39d6dce50ad0",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "e6e1b008-cdab-40fc-97a8-cad551013a3c",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "6e2cef15-2765-4897-9206-3c84382995c9",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "b4109bca-1f89-4dc5-bbeb-f068b82d740e",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "743cd5a6-cd5a-4114-8942-76fdbd58a7e4",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "2113ce81-f659-491e-93da-86405b17479f",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "6db7ac2e-1f39-4b4a-a830-16fc0eb17108",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "b13f85fa-f3ed-40e7-bcde-20b1eace7dca",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "970f91ee-a6a4-402c-bb23-b153dc01a815",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "7452b917-2d5d-48dc-ad65-8468052c885c",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "cc07dea9-1df2-4bfe-a960-0e4c5380a2e2",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "8f7a4c61-3be6-46a2-8653-bf86ddb702c9",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "e758775b-f465-4e7c-858d-6985a28f09f7",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "65006311-e253-4bd8-a598-2bc2ebe6ab2f",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "bf29cb02-6871-4575-a0f7-5ec2f5b999f1",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "3bffc31e-118a-4f06-9652-b769803ce302",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "3eb294ff-5b1e-4fef-80c9-ff1513dca024",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "9119ade2-e117-4356-8072-cf01c38d7305",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "0b3cd884-ebba-47a2-9f0d-3ce09ea5785a",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "22039b0a-9e6e-44cd-a3ca-b27ab991273f",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "8da695a7-1764-4ccf-9fb6-f23311c412ee",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "13c9cada-5427-4a68-81f7-7a14bce60e5b",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "cd43fbd3-5ad8-4a2d-9fd0-a1915038eaa3",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "ae1accc1-01e5-4c12-88f2-e13d13445d8b",
    "name" : "saml_organization",
    "description" : "Organization Membership",
    "protocol" : "saml",
    "attributes" : {
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "f1c96a1e-1792-4a4f-9a41-1475eadb308f",
      "name" : "organization",
      "protocol" : "saml",
      "protocolMapper" : "saml-organization-membership-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "88e227dd-53c3-435a-a831-534470960c80",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "2caac44e-8105-4741-9633-48abc9e18ee7",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "08d4a9ce-6278-4082-863c-e635e2cb6a65",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "7fd6b9d6-57d7-4173-af76-2301cc6f07a0",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "3c2199c6-6ecd-4d9b-959f-5d524fa378b0",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6b2b2348-40fd-4566-b949-b7ef22cd6971",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "43f53b81-acee-42d9-be54-6d34d9d8df6a",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "162e1148-f685-455d-a3e4-a55ead5b33d8",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b0a61f25-3670-4a74-999d-a6ef3eb90a31",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7bf209fb-8119-4d75-aa9d-f1a18a509cea",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "111d741b-0a95-4c57-a5e9-9c02ce62d06c",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9bcd6d47-1eac-4888-a28d-925c0b7a7b05",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9249aa51-59da-43df-9fe4-279002fe773a",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "db6d004c-9499-4f8b-aa3e-afae13070898",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "55341a80-a233-4322-9abe-99d4dd84e9aa",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3e0c2b4b-b59c-41be-832b-13de4193eb4c",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b87b5508-9cf5-4273-98e0-82dc91d1d3e1",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "0fb20eb7-62fd-4d47-a009-1a5c165d4510",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "bc4c58ae-2873-406e-9c8f-56765dfeb3cf",
    "name" : "organization",
    "description" : "Additional claims about the organization a subject belongs to",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${organizationScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "936040ac-d31e-415b-95ad-4e7c055832e2",
      "name" : "organization",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-organization-membership-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "organization",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "44cdfa93-3909-4136-a542-55520db1e89c",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper" ]
      }
    }, {
      "id" : "227dd8f6-167c-4438-83cd-1d5c91782491",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "fd624ef6-1a2a-4ef1-8a58-d73d328b3aca",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-address-mapper" ]
      }
    }, {
      "id" : "055bbdd7-1a14-41e1-8c7a-f3718e21596c",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "7ed91fe0-34b4-4b43-8dd1-7690b48e9eb9",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "59507e7c-32ff-4d50-ae1f-068297f64fff",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "db74a152-c58a-40ec-bbd5-b1a27b24acb9",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "1b541098-a0ea-48d5-afab-322d777384ba",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "5d86a395-92bf-496f-9f9e-5d5591f76def",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAzSKI+EW80t/QgSGIyVnLM5bpN8/LeFpOXQzb/hQJbyJ8OgN6RQaWX9IJ6TdRIb0XvBuP+CP0eXuwLW7/WINmlNukNcVbb0Iyf0e0xM/iyvmHFiY6UV07QZ/wdKCg/scPWlgUSeb8MTLPacWWYMZmJJNmQHynnFbKkdU1XpsnLp1Knp0FvYg4dcQLMqj2QC+wHyOJ9MkE3L9/f9rhIIsCH3Q9vgP+5xTqqHJJvnZqqF2Q926jYM/5prFNzQ0bv27SrfoXSDm+bgNzsfLiiRsnXc3Dvdl59tsfFBo1QqHuTo8UxCKOt2ERcr4ObOrc9XbIzk3FXzXuN2TdD6/w3g8NQwIDAQABAoIBAAMGGLA5ig1LRTF/b4yVKv16TUk6DN0NsfPpE1an2p+GXzi/7HwXN313U1BomJ273lYyy1433JMW+NVcZR2/So7fEcHhYLXxTrJAZIJgosdeZl+l0kcHGKEES0LTEqqwjbdT0n9oKWr4BJrMfHBgpTNctm2KJU8GmvBg1Ae8l2yLu+2qc3/aeatQAmA/PAhfd+/zlOD9O3qBuYaA/BZKaRC5oIYGAxU35hymnRUtevn6UEJHws3SAw6Isgffm0Eg1RW2gtcWoMy9rJMdiAGCW5esle0XG1NenG8rKApLQRVMqWQrbY9g1YKC8Mh4e3SXV0ISlOt79IPAVAveswXXeG0CgYEA5pEs2oGBiggFjkWrAMw2ZPdkcJbSJh77EPmrDm4+tSWD5T5NdKe2oBnTfh53DI5JQzpiL0+7DDlDRoX6MfHsUEyBsU2thjxEa8mur5zG7YTfPm2LEkHz0Gw6XZPLmsiq0uAMRyvFO/inOdve3FAaDiik3y8vs9u9yLnTErVun3UCgYEA48MypW8tRr1E2XV6uhDOcbBnxO7BM9Chk4xWgME2SQ3G+FMcX34pixXAkIcKtPFp/w3hsXcUfSkRXbToTbPe4JMSlP0tOA1nllMIBxIJ4fLptaS2lc6vCHYEPR2Zyu7pejAwQwDh5VgM6wL7vVjgdPYsIfS6XbWo/O8RYUa4WtcCgYAxtDonIKP8TZ5k/T/P/DX9rhdI7jp/XU5ianAlvD5obp3wXW31J/KGsQqWtZqUalgA1iU0bcu05uNJ4Lf+7Fg1N0j+H/C4b2WQlvnBgdqgeXRm0NaaKP2WgL5UTfgmdfvdWc9LyHPMad4i6vMwK1RymPBx7IosC8Lt8qE99z7RwQKBgQCCwlj8Q1SyDQ1O7zRTSDzNZmJc3FmNHtT0eZhb+RDqZf96J3TdmffNwuI311+dPBAHfve4w82+gWpX6vmHSqHFOoprgOKKEKAM3IR6Uq/byXLFdtfgL7WrXN3YHHtj1z+xh6LdhM8rtR5Nefv+29yZKY9yuyaXkCiBddr7hvdmJwKBgAZi7F3B24TYPg4Lc2oHqeDyKK9e9p3HA7YngxksqSkfFg0OlWyWppQml5+qiDmt+Ne6q85jsaegdFWJhK0MTQ+AuJtcWPmQoKUwKeTSk+js3QrcscB3XZalrC30XpaA+VWSybD5CHnSE/8MEkGr9iKjBfMHckIL50nza2Jrbbri" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICuTCCAaECBgGVgYwbazANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVnZW8tdHJhY2tpbmctc29sdXRpb24wHhcNMjUwMzEwMTkzMTM3WhcNMzUwMzEwMTkzMzE3WjAgMR4wHAYDVQQDDBVnZW8tdHJhY2tpbmctc29sdXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDNIoj4RbzS39CBIYjJWcszluk3z8t4Wk5dDNv+FAlvInw6A3pFBpZf0gnpN1EhvRe8G4/4I/R5e7Atbv9Yg2aU26Q1xVtvQjJ/R7TEz+LK+YcWJjpRXTtBn/B0oKD+xw9aWBRJ5vwxMs9pxZZgxmYkk2ZAfKecVsqR1TVemycunUqenQW9iDh1xAsyqPZAL7AfI4n0yQTcv39/2uEgiwIfdD2+A/7nFOqockm+dmqoXZD3bqNgz/mmsU3NDRu/btKt+hdIOb5uA3Ox8uKJGyddzcO92Xn22x8UGjVCoe5OjxTEIo63YRFyvg5s6tz1dsjOTcVfNe43ZN0Pr/DeDw1DAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAGWzKjujQrAND07vFRXJN3kyG3GJquhYOPIr+3sRiJnwQoBI0CcXo2Ru4y75H6YRRNhBdFIQwyIf/jVuHNtVvjrJLXIPQ8Qoc/v0mUWxXoKxkdmDiPI4qSPlgnCTbwBtNq4taBnaLE3ZK4wSLPstN2PfM0/udhh/ogzGgOfXgGLVvngHi7J6Z4p8PxuEkevP8MAObyjc0giPtOhZb+zpGNo5PiSE/tBLW9NxM30Q5wcTxV0j29qjCP0l/rTdqN9N96TXZFwF6+E0Jl9sL4eEUzyu/O8LHY+2ndRrthor4muIsmSLJ3jxMhLbqJD7bhClzHi0Wz3OicjGGCzNzFJpAok=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "0c1bbe84-8d27-46f8-9f15-b09177672ff9",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "f9044622-738a-49dc-af86-09bddcb38f93" ],
        "secret" : [ "_IZ40x_jyEkR_iTvGeDMKjluNlcRwLGk_UheR0tOh8FQXqh8Edt99uRjApRPbDgft5y0LU5HIiAipvJtnjHAnS8ojC53rNoT0dtSgcSVfv3H-jcLygsw_K36EKpCy88mHi46Gqak9tlLg7r5n15CNxKx4g8J5CbEEaToo_0ahYM" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "6c0c2d41-e6f1-46e9-ab82-d4ad3b7638a3",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "5ea50e9a-181e-4780-9a67-e96c701d3475" ],
        "secret" : [ "HPrAhG10EzQ0BRJOL4Bwrw" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "06e67a58-a846-43b1-af33-c58660793777",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAzGlyAel3YyDfFrYHz6zFpF9FhjxQoEeSDMPaeMU1pzp41Lq79ygmsqfNbUC8ZdHybxxlyZ3hkP5dvyIMuqtZ2CVMZNinqbQ6zQts1AmW9dIVuPlHGlTDyNi1Q3QdPgm9kPo1a/2BGaltSg+lmTfm//UiGYyBP5gYnFsJ/7W7q8duLvvuQmkuulaKNtypUX8j8+nxGNZVqa+FhdOD0I720lY6aYItW/Yg92536XUadg3fNBxg1An5PZ4eZcnQ8TbRH3/LABh5U65AwET1KF2QuhiOC/B/pO9DWiZANrKM4RNyANYBsfC/x1sw6WACr9iPEM1TT6vSjwH71LukesBT1QIDAQABAoIBABqA0Hqde/CDHlG6Q8yCLPUJMkE7mEOTzASyLyUqArEeRHTmikD7OHtBBQJVmqfD/yA3aR4pRYoQZPTHdCmO1n0PJvbLXX/EIbycrt1WKffQ56aeUYEBPQpRSL1IdJMq3aSKwHryOTcrz8MCwNibFi0ZKjTwUgC+FnDNYABC3qSgoS8hzENjXIXkdwrIZZLtPRL8IEv5MDtYd7pl+L8Gm8greoH/+dFXfe3kRLNvqVxMMYsSee8lJ/sDh7W5KXE5y5eN+8S6Zi7EHL0zoNsao6j85ffKt6BIpqSz8a5Ij+mBHdKtY+TZoh7ZwtdCa1w7uUJwNnEk3Nptz9S+F8XlihkCgYEA9768vA0J0J8IzLpYQ8jnUOjK2XUVuTmrTxBuvr2TS5DRizIhBO5cgyDE3mqRl/QbjOF00ciYtl66jPtXS4jVGg+ZdiBo98G4ae5FgfcHo1qwmmblMQPRgaVjHdtv5AqBzpmpGfm7XSQemVQprwNo9GfxwpKJDSrt1bH7iTUoBY0CgYEA0zkTnMsphH8SJnFZaqsG298fNFFkXrDBFEKu5sWPX9LYUfzddiWxE9+mSlJ+G2ugyVz+wydl3oimIaxW/qioq6vC88Y6+8yvTaAxmGSewoFOHmt83BmcJK3SoXbymurUJlPs1F7bflr28ma5r6umbb4H0Y/tkt20n0qajWEygWkCgYEAvNtK9rOdwsopJB/9fxbctwHu+JxXxg5fN/NX6NGNQnKQOmMpZp/qKA/H46ErgcGVauzHZ9BaEdPes/A52Jvjj21K2BDW0996HE6F8BAHY5CTxfAgUSAPCpywFSedgSI9V+gtT17fZJ5PMSVGbWLVFFNUqbWZAk+yZE+8Zxj9fFUCgYAVDjqDRclUuOoRRPlZ5cSgRGSy7W4o9ku4/lC7FnSNY9JGkgNtlKJLTd8gx4pkp1z21btbruC7xzlwX+KoLh3qRwv/CwK0ORo8jbyD6Xvd/c/QvnxK4I6tJVq618WlZcVSMMmJ/g65UM4PKehWt7C2fdv/qu5O1qT7wA8aCtdjCQKBgQCsSzCiwaavgTC3jioJjmsCaHlb/2Jc8dqCyBmqi8bZhUW2DgpVpwEmGGLNRJ5mrcjltWVyA4O8IG0uBgZhjmi88BmBM/+UMZH3HP5fC4ZALmPKaB1xcTC8ZmcDs8XFFrnkpjFxQxB7uM9h4lrmEKuvyMYL99+20okZGs53tb+KAQ==" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICuTCCAaECBgGVgYwa3TANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVnZW8tdHJhY2tpbmctc29sdXRpb24wHhcNMjUwMzEwMTkzMTM3WhcNMzUwMzEwMTkzMzE3WjAgMR4wHAYDVQQDDBVnZW8tdHJhY2tpbmctc29sdXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDMaXIB6XdjIN8WtgfPrMWkX0WGPFCgR5IMw9p4xTWnOnjUurv3KCayp81tQLxl0fJvHGXJneGQ/l2/Igy6q1nYJUxk2KeptDrNC2zUCZb10hW4+UcaVMPI2LVDdB0+Cb2Q+jVr/YEZqW1KD6WZN+b/9SIZjIE/mBicWwn/tburx24u++5CaS66Voo23KlRfyPz6fEY1lWpr4WF04PQjvbSVjppgi1b9iD3bnfpdRp2Dd80HGDUCfk9nh5lydDxNtEff8sAGHlTrkDARPUoXZC6GI4L8H+k70NaJkA2sozhE3IA1gGx8L/HWzDpYAKv2I8QzVNPq9KPAfvUu6R6wFPVAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACsGtTDdCv0nYXMCYg+v8DAestIPLf2TU2UxeK15CvLFSrkDtbsZ65XAraPxr5YrkinksWc4OQXl2445x+Ds/YgGU1uWReTCp8IdZ3PKsmzVkorffH9e194+PsQRcC8SWc9VYcaOTCIoXwNg3sM/KJQBQdPyp86QJ8crZH/2UH1ymUiDRhVG2W2/MEciJtvXZ/GuQuvY4CfxSWsk2zIt0XXbVZVbNszt6hZW/eK6QgMwQBGeNHC7MH7Kxx3J57sKZKusL6jIvTspkpGLbXuj1BaWBzXLMQvlwnt6/+pZ17oAMbPWkz9BWXaQ33nIW03gs6/l+aPKWcDsVswiWGgzkeo=" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "ae8c1786-7b0c-4b99-b11d-76ddbb35f3be",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "7b8c357c-7a97-46ad-a288-d3393b2ac20d",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "9f832aeb-63bf-4c86-8776-3292272407fa",
    "alias" : "Browser - Conditional Organization",
    "description" : "Flow to determine if the organization identity-first login is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "organization",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0f0c67fd-0631-4f18-982b-6ea0096e870a",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b1e5c03d-7b2d-4281-bba9-22808b9b6022",
    "alias" : "First Broker Login - Conditional Organization",
    "description" : "Flow to determine if the authenticator that adds organization members is to be used",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "idp-add-organization-member",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4f6c536b-c81b-479b-a190-c34ab99a40c2",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "aa63ce83-64e5-4973-89a2-261eddc26f94",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "fc656e03-3f3b-4514-97dd-d6a07f470cdf",
    "alias" : "Organization",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "155dcf93-8c81-40e9-822b-52f99a6d7465",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f57a1455-1e35-449e-9f7a-05e74a43cac8",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "990ccff1-0d81-411a-98bf-679f3e25931a",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "11139d18-1d25-46ec-b101-4aefabb2ec23",
    "alias" : "browser",
    "description" : "Browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 26,
      "autheticatorFlow" : true,
      "flowAlias" : "Organization",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a6567789-0231-4030-a275-87f4df83d7f6",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0b3458d0-ff72-4b91-ad9f-850f3fb5a1c5",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ef583afc-db2f-49fb-a926-7e44952d47bc",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "20115ce0-b1e5-4dd8-86ce-95c7f13d0b4c",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 50,
      "autheticatorFlow" : true,
      "flowAlias" : "First Broker Login - Conditional Organization",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "186a9eb1-68d5-4983-a9a8-11957e42488c",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "30db4683-048a-4cef-a9e6-360a934e7b9a",
    "alias" : "registration",
    "description" : "Registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ccf0e9ad-da1b-41ee-b6c1-751e1c9c76a9",
    "alias" : "registration form",
    "description" : "Registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "bcab8f99-d734-49a2-aee8-031a99fb2d40",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0d75095c-7bc2-42fb-9c7f-997429b57a73",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "2c32cf8d-3f8b-4d87-91c5-5e024830ade1",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "4e1a5c05-3572-4c98-adb9-f20c9481e667",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DevicePollingInterval" : "5",
    "clientOfflineSessionMaxLifespan" : "0",
    "clientSessionIdleTimeout" : "0",
    "clientOfflineSessionIdleTimeout" : "0",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "organizationsEnabled" : "false"
  },
  "keycloakVersion" : "26.0.0",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}